@model Model.Delay
@{
    ViewBag.Title = "Edit";

    Layout = "~/Views/Shared/_Layout.cshtml";
}
Master Data / Employee / Update Delay No @Model.Id

<style>
    .input {
        border: none;
        color: #555;
        text-align: center;
        width: 60px;
    }
</style>

<div class="">
    <div class="row">
        <div class="col-md-12">

            <div class="card">
                <div class="container">
                    <div class="card-header row" style="  padding-left: 0;padding-right: 0;">
                        <div class="col-md-6" style="padding-left:0">
                            <h5 class="text-capitalize btn">Delay System</h5>

                        </div>
                        <div class="col-md-6" style="text-align:right; padding-right:0">
                            <a class="btn btn-primary" href="/Delay/Index?Length=8" style="
    border-radius: 0px 0px 2px 30px;
">Back to index</a>

                        </div>
                    </div>
                </div>

                @using (Html.BeginForm())
                {
                    <div class="container mt-5">

                        <div class="row">
                            <div class="col-md-6">
                                @Html.EditorFor(ee => ee.Id, new { htmlAttributes = new { @class = "form-control form-control-sm", hidden = "true" } })
                                @Html.EditorFor(ee => ee.ShiftId, new { htmlAttributes = new { @class = "form-control form-control-sm", hidden = "true" } })

                                <div class="form-group row">
                                    <label for="colFormLabel" class="col-sm-4 col-form-label">Shift ID</label>
                                    <div class="col-sm-8" style="display: flex;">
                                        <input type="text" name="Shift_Id" value="@Model.Shift_Id" class="form-control gg" id="colFormLabel" placeholder="col-form-label" disabled><span class="ion-navicon-round aa" style="position: absolute;right:22px;top:6px; cursor: pointer;"></span>
                                    </div>
                                </div>
                                <div class="form-group row">
                                    <label for="colFormLabelLg" class="col-sm-4 col-form-label col-form-label-sm">Shift Name</label>
                                    <div class="col-sm-8">
                                        @*<input type="text" class="form-control form-control-sm" id="colFormLabelLg" placeholder="col-form-label-lg" disabled>*@
                                        @Html.EditorFor(ee => ee.ShiftName, new { htmlAttributes = new { @class = "form-control form-control-sm", placeholder = "Shift Name", disabled = "true" } })
                                        @Html.ValidationMessageFor(s => s.ShiftName, "", htmlAttributes: new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="row">
                                    <div class="col-md-8">
                                        <div class="form-group row">
                                            <label for="colFormLabelLg" class="col-sm-4 col-form-label col-form-label-sm">From</label>
                                            <div class="col-sm-8">
                                                @*<input type="time" value="@Model.Warning_From" name="Warning_From" class="form-control form-control-sm" id="Warning_From" placeholder="Warning From">*@
                                                @*@Html.EditorFor(ee => ee.Warning_From, new { htmlAttributes = new { @class = "form-control form-control-sm" } })*@
                                                @*@Html.ValidationMessageFor(s => s.Warning_From, "", htmlAttributes: new { @class = "text-danger" })*@
                                                <input type="number" name="hours" min="0" value='@int.Parse(Model.Warning_From[0].ToString()+""+Model.Warning_From[1].ToString())' class="col-sm-4 input" required />:<input type="number" max="59" name="Minuts" min="0" value='@int.Parse(Model.Warning_From[3].ToString()+""+Model.Warning_From[4].ToString())' class="col-sm-4 input" required />

                                            </div>
                                        </div>
                                        <div class="form-group row">
                                            <label for="colFormLabelLg" class="col-sm-4 col-form-label col-form-label-sm">To</label>
                                            <div class="col-sm-8">
                                                @*<input type="time" value="@Model.Warning_To" name="Warning_To" class="form-control form-control-sm" id="Warning_From" placeholder="Warning From">*@
                                                @*@Html.EditorFor(ee => ee.Warning_To, new { htmlAttributes = new { @class = "form-control form-control-sm" } })*@
                                                @*@Html.ValidationMessageFor(s => s.Warning_To, "", htmlAttributes: new { @class = "text-danger" })*@
                                                <input type="number" name="hours" min="0" value='@int.Parse(Model.Warning_To[0].ToString()+""+Model.Warning_To[1].ToString())' class="col-sm-4 input" required />:<input type="number" max="59" name="Minuts" min="0" value='@int.Parse(Model.Warning_To[3].ToString()+""+Model.Warning_To[4].ToString())' class="col-sm-4 input" required />
                                            </div>
                                        </div>
                                        <div class="form-group row">
                                            <label for="colFormLabelLg" class="col-sm-4 col-form-label col-form-label-sm"></label>
                                            <div class="col-sm-8">
                                                @*<input type="time" value="@Model.Allowed_Delay" name="Allowed_Delay" class="form-control form-control-sm" id="colFormLabelLg" placeholder="Allowed Delay">*@
                                                @*@Html.EditorFor(ee => ee.Allowed_Delay, new { htmlAttributes = new { @class = "form-control form-control-sm" } })*@
                                                @*@Html.ValidationMessageFor(s => s.Allowed_Delay, "", htmlAttributes: new { @class = "text-danger" })*@
                                                <input type="number" name="hours" min="0" value='@int.Parse(Model.Allowed_Delay[0].ToString()+""+Model.Allowed_Delay[1].ToString())' class="col-sm-4 input" required />:<input type="number" max="59" name="Minuts" min="0" value='@int.Parse(Model.Allowed_Delay[3].ToString()+""+Model.Allowed_Delay[4].ToString())' class="col-sm-4 input" required />
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="form-group row">
                                            <div class="col-md-12">
                                                <label for="colFormLabelLg" class="col-sm-12 col-form-label col-form-label-md">Worrning</label>
                                            </div>
                                        </div>
                                        <div class="form-group row mt-5">
                                            <div class="col-md-12">
                                                <label for="colFormLabelLg" class="col-sm-12 col-form-label col-form-label-md">   Allow Delay</label>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row mt-3">
                            <div class="col-md-12">
                                <div class="card">
                                    <div class="">
                                        <button type="button" class="btn btn-primary  waves-effect waves-light add" onclick="add_row();" style="margin:10px">
                                            Add Row
                                        </button>
                                        <div class="table-responsive">
                                            <table class="table table-striped table-bordered" id="example-1">
                                                <thead>
                                                    <tr>
                                                        
                                                        <th>From</th>
                                                        <th> To</th>
                                                        <th>Value</th>
                                                    </tr>
                                                </thead>
                                                <tbody id="myTable" class="k">
                                                    @foreach (var item in Model.DelayFromTos)
                                                    {
                                                        /**/
                                                        <tr>
                                                            <td>
                                                                <input type="time" name="From" value="@item.From" class="form-control form-control-sm" id="colFormLabelLg" placeholder="col-form-label-lg" required>
                                                                
                                                            </td>
                                                            <td>
                                                                <input type="time" name="To" value="@item.To" class="form-control form-control-sm" id="colFormLabelLg" placeholder="col-form-label-lg" required>
                                                                
                                                            </td>
                                                            <td>
                                                                <input type="number" name="hours" min="0" value='@int.Parse(item.Value[0].ToString()+""+item.Value[1].ToString())' class="col-sm-4 input" required />:<input type="number" max="59" name="Minuts" min="0" value='@int.Parse(item.Value[3].ToString()+""+item.Value[4].ToString())' class="col-sm-4 input" required />
                                                            </td>
                                                        </tr>
                                                    }

                                                </tbody>
                                            </table>
                                        </div>

                                    </div>
                                </div>
                            </div>
                        </div>


                        <!--start button-->
                        <div class="row mt-5 mb-4">
                            <div class=col-md-12>
                                <button class="btn btn-primary">Update</button>
                            </div>
                        </div>
                        <!--end button-->

                    </div>
                }
            </div>

        </div>

    </div>

</div>
<script type="text/javascript" src="~/bower_components/jquery/js/jquery.min.js"></script>
<script src="~/bower_components/jquery-ui/js/jquery-ui.min.js"></script>
<script type="text/javascript" src="~/assets2/pages/edit-table/add.js"></script>
<script type="text/javascript" src="~/assets2/pages/edit-table/jquery.tabledit.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>

<script>
    //Min.js
    $(document).ready(function () {
        /* $(window).load('/jquery/getdata', // url
             {
                 name: 'bill'
             }, // data
             function(data, status, jqXGR) { // callback function
                 alert('data loaded');
             });*/

        $('.alert').fadeOut(8000),
            $('.close').click(function () {
                $('.alert').hide()
            })
        $('.zz').on('click', function () {
            $(function () {
                $("#di").dialog({
                    width: 700,
                    height: 500,
                    position: { my: "left top", }


                    /*appendTo: '<div class="card-header"><h5>Edit With Button</h5><span>Click on buttons to perform actions</span><div class="card-header-right"><i class="icofont icofont-rounded-down"></i><i class="icofont icofont-refresh"></i><i class="icofont icofont-close-circled"></i></div></div><div class="card-block"><div class="table-responsive"><table class="table table-striped table-bordered" id="example-2"><thead><tr><th>emp ID</th><th>First name</th><th>Last name</th><th>Choose</th></tr></thead><tbody><tr><th scope="row" class=""><input id="idd"></th><td>Islam</td><td>Ahmed</td><td class="tabledit-view-mode hh"><!-- <select id="dropdownList"><option value="1">Option 1</option> <option value="2">Option 2</option><option value="3">Option 3</option><option value="4">Option 4</option><option value="5">Option 5</option></select>--><button class="btn btn-primary" id="choose"> choose</button></td></tr></tbody></table></div></div>'*/
                });


            });
        });
        $('.aa').on('click', function () {
            $(function () {
                $("#dialog").dialog({
                    width: 700,
                    height: 500


                    /*appendTo: '<div class="card-header"><h5>Edit With Button</h5><span>Click on buttons to perform actions</span><div class="card-header-right"><i class="icofont icofont-rounded-down"></i><i class="icofont icofont-refresh"></i><i class="icofont icofont-close-circled"></i></div></div><div class="card-block"><div class="table-responsive"><table class="table table-striped table-bordered" id="example-2"><thead><tr><th>emp ID</th><th>First name</th><th>Last name</th><th>Choose</th></tr></thead><tbody><tr><th scope="row" class=""><input id="idd"></th><td>Islam</td><td>Ahmed</td><td class="tabledit-view-mode hh"><!-- <select id="dropdownList"><option value="1">Option 1</option> <option value="2">Option 2</option><option value="3">Option 3</option><option value="4">Option 4</option><option value="5">Option 5</option></select>--><button class="btn btn-primary" id="choose"> choose</button></td></tr></tbody></table></div></div>'*/
                });


            });
        });
        $('#dropdownList').on('change', function () {
            //var optionValue = $(this).val();
            //var optionText = $('#dropdownList option[value="'+optionValue+'"]').text();
            var optionText = $("#dropdownList option:selected").val();
            alert("Selected Option Text: " + optionText);
            $('.gg').val(optionText)
        });

        $("#myTable").on('click', '.btnSelect', function () {
            // get the current row
            var currentRow = $(this).closest("tr");

            var col1 = currentRow.find("th:eq(0)").text(); // get current row 1st TD value

            var data = col1;


            // alert(data);

            // alert(data);
            $('.gg').val(data);
            $('#dialog').hide()

            if ($('#colFormLabel').val() != 'Select Value...') {
                $.ajax({
                    type: 'POST',
                    url: 'GetShiftData',
                    dataType: 'json',
                    data: { ShiftID: $('.gg').val() },
                    success: function (mems) {
                        $('#ShiftName').val(mems.ShiftName);
                    },
                    error: function (ex) {
                        alert('Failed to retrieve states.' + ex);
                    }
                });
            }

        });
        $("#xx").on('click', '.btnSelect', function () {
            // get the current row
            var currentRow = $(this).closest("tr");

            var col1 = currentRow.find("th:eq(0)").text(); // get current row 1st TD value

            var data = col1;
            //alert(data)

            // alert(data);

            // alert(data);
            $('.ll').val(data);
            $('#di').hide()
        });
        // search
        $("#myInput").on("keyup", function () {
            var value = $(this).val().toLowerCase();
            $("#myTable tr").filter(function () {
                $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1)
            });
        });
        $("#nn").on("keyup", function () {
            var value = $(this).val().toLowerCase();
            $("#xx tr").filter(function () {
                $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1)
            });
        });
    });

    //My functions

    $('#colFormLabel').change(function () {
        if ($('#colFormLabel').val() != 'Select Value...') {
            $.ajax({
                type: 'POST',
                url: 'GetEmployeeData',
                dataType: 'json',
                data: { id: $('#colFormLabel').val() },
                success: function (mems) {
                    $('#Employee_FirstName').val(mems.FName);
                    $('#Employee_LastName').val(mems.LName);
                    $('#Employee_Personal_Status').val(mems.Status);
                    $('#Employee_TypeEmployee_Value').val(mems.Type);
                    $('#Employee_Class_Name').val(mems.Class);
                    $('#Employee_Personal_PersonalArea').val(mems.PersonnelArea);
                    $('#Employee_Personal_PersonalSubArea').val(mems.PersonnelSubArea);
                    $('#Employee_Personal_Division').val(mems.Division);
                    $('#Employee_Personal_SubDivision').val(mems.SubDivision);
                    $('#Employee_FileNumber').val(mems.FileNo);
                },
                error: function (ex) {
                    alert('Failed to retrieve states.' + ex);
                }
            });
        }
        else {
            Clear()
        }
    })

    function Clear() {
        $('#Employee_FirstName').val('');
        $('#Employee_LastName').val('');
        $('#Employee_Personal_Status').val('');
        $('#Employee_TypeEmployee_Value').val('');
        $('#Employee_Class_Name').val('');
        $('#Employee_Personal_PersonalArea').val('');
        $('#Employee_Personal_PersonalSubArea').val('');
        $('#Employee_Personal_Division').val('');
        $('#Employee_Personal_SubDivision').val('');
        $('#Employee_FileNumber').val('');

    }

    function AddAttendance() {
        $.ajax({
            type: 'POST',
            url: 'AddAttendance',
            dataType: 'json',
            data: {
                EmployeeNo: $('#colFormLabel').val(),
                AttendanceTypeId: $('#AttendanceTypeId').val(),
                Remarks: $('#exampleFormControlTextarea2').val(),
                HoursNo: $('#HoursNo').val(),
                DateFrom: $('#DateFrom').val(),
                TimeFrom: $('#TimeFrom').val(),
                TimeTo: $('#TimeTo').val()
            },
            success: function (mems) {
                if (mems == true) {
                    $("body").append('<div class="alert alert-primary" role = "alert" >Data is Saved</div>');

                    $("body").append('<div data-growl="container" class="alert alert-success alert-dismissable growl-animated animated fadeInDown" role="alert" data-growl-position="top-right" style="position: fixed; margin: 0px; z-index: 999999; display: inline-block; top: 30px; right: 30px; "><button type="button" class="close ml-3" data-growl="dismiss" style="display:block; z-index: 999998; "><span aria-hidden="true">×</span><span class="sr-only">Close</span></button><span data-growl="icon"></span> <span data-growl="title" > Bootstrap Growl </span> <span data-growl="message">Turning standard Bootstrap alerts into awesome notifications</span> <a href="#" data-growl="url"></a> </div>')
                    Clear();
                    $('#colFormLabel').val('Select Value...');
                    $('#AttendanceTypeId').val('');
                    $('#exampleFormControlTextarea2').val('');
                    $('#HoursNo').val('');
                    $('#DateFrom').val('');
                    $('#TimeFrom').val('');
                    $('#TimeTo').val('');


                }
                else
                    $("body").append('<div class="alert alert-primary" role = "alert" >Data not Saved</div>');
            },
            error: function (ex) {
                $("body").append('<div class="alert alert-primary" role = "alert" >Error in data</div>');
            }
        });
    }
</script>
<script>
    $(document).ready(function () {
        /* $(window).load('/jquery/getdata', // url
             {
                 name: 'bill'
             }, // data
             function(data, status, jqXGR) { // callback function
                 alert('data loaded');
             });*/

        $('.alert').fadeOut(8000),
            $('.close').click(function () {
                $('.alert').hide()
            })
        $('.closee').click(function () {
            alert("12");
            $('.cardee').hide()
        })
    });
</script>
<script>
    var t = document.title;
    document.title = t + " - " + " Edit Delay"
</script>



<script>
    $(function () {
        var lenght = $('#myTable tr').length;
        console.log(lenght);
        if (lenght > 10) {
            $('.table-responsive').css('overflow-y', "scroll");
            $('.table-responsive').css('height', "300px")

        }
        else {
            $('.table-responsive').css('overflow', "hidden");

        }

    })
</script>

<script>
    $(function () {
        $('.aa').click(function () {
            var tr = $('.k ').find('tr').length;
            console.log(tr)

            if (tr >= 6) {

                $('.scrolltop').css("overflow-y", "scroll")

            }
            else {
                $('.scrolltop').css("overflow-y", "hidden")

            }
        })
    })
</script>
<script>
    $(function () {

        var rowCount = $('#myTable tr').length;
        if (rowCount >= 4) {
           
            $('.table-responsive').css({
                "overflow": " auto",
                "height":"300px"
            })

        }
    })
</script>