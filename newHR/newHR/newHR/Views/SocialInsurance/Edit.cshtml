
@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@model Model.SocialInsurance
@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
Master Data /Employee /Update SociaLInsurance for Employee No @Services.EmployeeService.GetById(Model.EmployeeId).EmployeeNo

<div class="card">
    <div class="container">
        <div class="card-header row" style="  padding-left: 0;padding-right: 0;">
            <div class="col-md-6" style="padding-left:0">
                <h5 class="text-capitalize btn">SocialInsurance</h5>
            </div>
            <div class="col-md-6" style="text-align:right; padding-right:0">
                <a class="btn btn-primary" href="/SocialInsurance/Index?Length=8" style="
    border-radius: 0px 0px 2px 30px;
">Back to index</a>
                @*<button type="submit" class="btn btn-primary ">Add</button>*@
            </div>
        </div>
    </div>
    @using (Html.BeginForm("Edit", "SocialInsurance", FormMethod.Post))
    {
        <div class="container mt-5">

            <div class="row">
                <div class="col-md-6">
                    <form>
                        <div class="form-group row">
                            <label for="colFormLabel" class="col-sm-4 col-form-label">Employee Number</label>
                            <div class="col-sm-8">
                                @Html.EditorFor(ww => ww.Employee.EmployeeNo, new { htmlAttributes = new { @class = "form-control form-control-sm", Placeholder = "Employee No", disabled = "true" } })

                            </div>
                        </div>

                        <div class="form-group row">
                            <label for="colFormLabel" class="col-sm-4 col-form-label">First Name</label>
                            <div class="col-sm-8">

                                @Html.EditorFor(ww => ww.Employee.FirstName, new { htmlAttributes = new { @class = "form-control form-control-sm", Placeholder = "First Name", disabled = "true" } })

                            </div>
                        </div>
                        <div class="form-group row">
                            @Html.LabelFor(ww => ww.Employee.LastName, htmlAttributes: new { @class = "col-sm-4 col-form-label col-form-label-sm" })

                            <div class="col-sm-8">

                                @Html.EditorFor(ww => ww.Employee.LastName, new { htmlAttributes = new { @class = "form-control form-control-sm", Placeholder = "Last Name", disabled = "true" } })

                            </div>
                        </div>
                        <div class="form-group row">
                            @Html.LabelFor(ww => ww.Employee.Personal.Status, htmlAttributes: new { @class = "col-sm-4 col-form-label col-form-label-sm" })

                            <div class="col-sm-8">

                                @Html.EditorFor(ww => ww.Employee.Personal.Status.Name, new { htmlAttributes = new { @class = "form-control form-control-sm", Placeholder = "Status", disabled = "true" } })

                            </div>
                        </div>
                        <div class="form-group row">
                            @Html.LabelFor(ww => ww.Employee.TypeEmployeeId, htmlAttributes: new { @class = "col-sm-4 col-form-label col-form-label-sm" })

                            <div class="col-sm-8">

                                @Html.EditorFor(ww => ww.Employee.TypeEmployee.Value, new { htmlAttributes = new { @class = "form-control form-control-sm", Placeholder = "Type", disabled = "true" } })

                            </div>
                        </div>
                        <div class="form-group row">
                            @Html.LabelFor(ww => ww.Employee.ClassId, htmlAttributes: new { @class = "col-sm-4 col-form-label col-form-label-sm" })

                            <div class="col-sm-8">

                                @Html.EditorFor(ww => ww.Employee.Class.Name, new { htmlAttributes = new { @class = "form-control form-control-sm", Placeholder = "Class", disabled = "true" } })

                            </div>
                        </div>
                    </form>
                </div>
                <div class="col-md-6">
                    <form>
                        <div class="form-group row">
                            @Html.LabelFor(ww => ww.Employee.Personal.PersonalArea, htmlAttributes: new { @class = "col-sm-4 col-form-label col-form-label-sm" })

                            <div class="col-sm-8">

                                @Html.EditorFor(ww => ww.Employee.Personal.PersonalArea, new { htmlAttributes = new { @class = "form-control form-control-sm", Placeholder = "Personal Area", disabled = "true" } })

                            </div>
                        </div>
                        <div class="form-group row">
                            @Html.LabelFor(ww => ww.Employee.Personal.PersonalSubArea, htmlAttributes: new { @class = "col-sm-4 col-form-label col-form-label-sm" })

                            <div class="col-sm-8">

                                @Html.EditorFor(ww => ww.Employee.Personal.PersonalSubArea, new { htmlAttributes = new { @class = "form-control form-control-sm", Placeholder = "Personal Sub Area", disabled = "true" } })

                            </div>
                        </div>
                        <div class="form-group row">
                            @Html.LabelFor(ww => ww.Employee.Personal.Division, htmlAttributes: new { @class = "col-sm-4 col-form-label col-form-label-sm" })

                            <div class="col-sm-8">

                                @Html.EditorFor(ww => ww.Employee.Personal.Division, new { htmlAttributes = new { @class = "form-control form-control-sm", Placeholder = "Division", disabled = "true" } })

                            </div>
                        </div>
                        <div class="form-group row">
                            @Html.LabelFor(ww => ww.Employee.Personal.SubDivision, htmlAttributes: new { @class = "col-sm-4 col-form-label col-form-label-sm" })

                            <div class="col-sm-8">

                                @Html.EditorFor(ww => ww.Employee.Personal.SubDivision, new { htmlAttributes = new { @class = "form-control form-control-sm", Placeholder = "Sub Division", disabled = "true" } })

                            </div>
                        </div>
                        <div class="form-group row">
                            @Html.LabelFor(ww => ww.Employee.FileNumber, htmlAttributes: new { @class = "col-sm-4 col-form-label col-form-label-sm" })

                            <div class="col-sm-8">

                                @Html.EditorFor(ww => ww.Employee.FileNumber, new { htmlAttributes = new { @class = "form-control form-control-sm", Placeholder = "File Number", disabled = "true" } })

                            </div>
                        </div>
                    </form>
                </div>
            </div>

            <div class="row mt-3">
                <div class="col-md-6">
                    <div class="form-group row" hidden>
                        @Html.EditorFor(ww => ww.Id, new { htmlAttributes = new { @class = "form-control form-control-sm", Placeholder = "Of Fixed Salart For Employee Contrribution" } })
                        @Html.EditorFor(ww => ww.EmployeeId, new { htmlAttributes = new { @class = "form-control form-control-sm", Placeholder = "Of Fixed Salart For Employee Contrribution" } })
                    </div>
                    <div class="form-group row">
                        <label for="colFormLabel" class="col-sm-4 col-form-label-sm">Insurance Type </label>
                        <div class="col-sm-8">
                            @Html.DropDownListFor(ww => ww.InsuranceTypeId, ViewBag.Insurances as SelectList, htmlAttributes: new { @class = "custom-select form-control-sm w-100" })
                        </div>
                    </div>
                    <div class="form-group row">
                        <label for="colFormLabelLg" class="col-sm-4 col-form-label col-form-label-sm">Date Of Enrollment</label>
                        <div class="col-sm-8">
                            <input type="date" value="@ViewBag.Date" class="form-control form-control-sm" id="Date" name="DateOfEnrollment">
                            @*@Html.EditorFor(ww => ww.DateOfEnrollment, new { htmlAttributes = new { @class = "form-control form-control-sm", Placeholder = "Date Of Enrollment" } })*@
                            @Html.ValidationMessageFor(ww => ww.DateOfEnrollment, "", htmlAttributes: new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group row">
                        <label for="colFormLabelLg" class="col-sm-4 col-form-label col-form-label-sm">%of Fixed Salart For Employee Contrribution</label>
                        <div class="col-sm-8">
                            @Html.EditorFor(ww => ww.ofFixedSalartForEmployeeContrribution1, new { htmlAttributes = new { @class = "form-control form-control-sm", Placeholder = "Of Fixed Salart For Employee Contrribution" } })
                            @Html.ValidationMessageFor(ww => ww.ofFixedSalartForEmployeeContrribution1, "", htmlAttributes: new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group row">
                        <label for="colFormLabelLg" class="col-sm-4 col-form-label col-form-label-sm">%of Variable Salart For Employee Contrribution</label>
                        <div class="col-sm-8">
                            @*<input type="text" class="form-control form-control-sm" id="colFormLabelLg" placeholder="col-form-label-lg">*@
                            @Html.EditorFor(ww => ww.ofVariableSalartForEmployeeContrribution1, new { htmlAttributes = new { @class = "form-control form-control-sm", Placeholder = "Of Variable Salart For Employee Contrribution" } })
                            @Html.ValidationMessageFor(ww => ww.ofVariableSalartForEmployeeContrribution1, "", htmlAttributes: new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group row">
                        <label for="colFormLabelLg" class="col-sm-4 col-form-label col-form-label-sm">Employee Fixed Salary</label>
                        <div class="col-sm-8">
                            @*<input type="text" class="form-control form-control-sm" id="colFormLabelLg" placeholder="col-form-label-lg">*@
                            @Html.EditorFor(ww => ww.EmployeeFixedSalary, new { htmlAttributes = new { @class = "form-control form-control-sm", Placeholder = "Employee Fixed Salary" } })
                            @Html.ValidationMessageFor(ww => ww.EmployeeFixedSalary, "", htmlAttributes: new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group row">
                        <label for="colFormLabelLg" class="col-sm-4 col-form-label col-form-label-sm">Emplyee Variable Salary</label>
                        <div class="col-sm-8">
                            @*<input type="text" class="form-control form-control-sm" id="colFormLabelLg" placeholder="col-form-label-lg">*@
                            @Html.EditorFor(ww => ww.EmplyeeVariableSalary, new { htmlAttributes = new { @class = "form-control form-control-sm", Placeholder = "Emplyee Variable Salary" } })
                            @Html.ValidationMessageFor(ww => ww.EmplyeeVariableSalary, "", htmlAttributes: new { @class = "text-danger" })
                        </div>
                    </div>


                    <div class="form-group row" hidden>
                        <div class="col-sm-8">
                            @Html.EditorFor(ww => ww.IsCreated)
                        </div>
                    </div>


                    <div class="form-group row">
                        <label for="colFormLabelLg" class="col-sm-4 col-form-label col-form-label-sm">Advance</label>
                        <div class="col-sm-8">
                            @*<input type="text" class="form-control form-control-sm" id="colFormLabelLg" placeholder="col-form-label-lg">*@
                            @Html.EditorFor(ww => ww.Advance, new { htmlAttributes = new { @class = "form-control form-control-sm", Placeholder = "Advance" } })
                            @Html.ValidationMessageFor(ww => ww.Advance, "", htmlAttributes: new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group row">
                        <label for="colFormLabel" class="col-sm-4 col-form-label-sm">Contribution Period</label>
                        <div class="col-sm-8">
                            @Html.DropDownListFor(ww => ww.ContributionPeriodId, ViewBag.Contributions as SelectList, htmlAttributes: new { @class = "custom-select form-control-sm w-100" })
                        </div>
                    </div>
                    <div class="form-group row">
                        <label for="colFormLabelLg" class="col-sm-4 col-form-label col-form-label-sm">Valid Updto</label>
                        <div class="col-sm-8">
                            @*<input type="text" class="form-control form-control-sm" id="colFormLabelLg" placeholder="col-form-label-lg">*@
                            @Html.EditorFor(ww => ww.ValidUpdto, new { htmlAttributes = new { @class = "form-control form-control-sm", Placeholder = "Valid Updto" } })
                            @Html.ValidationMessageFor(ww => ww.ValidUpdto, "", htmlAttributes: new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group row">
                        <label for="colFormLabelLg" class="col-sm-4 col-form-label col-form-label-sm">%of fixed Salary For Employer Contrribution</label>
                        <div class="col-sm-8">
                            @*<input type="text" class="form-control form-control-sm" id="colFormLabelLg" placeholder="col-form-label-lg">*@
                            @Html.EditorFor(ww => ww.ofFixedSalartForEmployeeContrribution2, new { htmlAttributes = new { @class = "form-control form-control-sm", Placeholder = "Of Fixed Salart For Employee Contrribution" } })
                            @Html.ValidationMessageFor(ww => ww.ofFixedSalartForEmployeeContrribution2, "", htmlAttributes: new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group row">
                        <label for="colFormLabelLg" class="col-sm-4 col-form-label col-form-label-sm">%of Variable Salary For Employer Contrribution</label>
                        <div class="col-sm-8">
                            @*<input type="text" class="form-control form-control-sm" id="colFormLabelLg" placeholder="col-form-label-lg">*@
                            @Html.EditorFor(ww => ww.ofVariableSalartForEmployeeContrribution2, new { htmlAttributes = new { @class = "form-control form-control-sm", Placeholder = "Of Variable Salart For Employee Contrribution" } })
                            @Html.ValidationMessageFor(ww => ww.ofVariableSalartForEmployeeContrribution2, "", htmlAttributes: new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group row">
                        <label for="colFormLabelLg" class="col-sm-4 col-form-label col-form-label-sm">%of fixed Salary For Company Contrribution</label>
                        <div class="col-sm-8">
                            @*<input type="text" class="form-control form-control-sm" id="colFormLabelLg" placeholder="col-form-label-lg">*@
                            @Html.EditorFor(ww => ww.ofFixedSalartForCompanyContrribution2, new { htmlAttributes = new { @class = "form-control form-control-sm", Placeholder = "of fixed Salart For Company Contrribution" } })
                            @Html.ValidationMessageFor(ww => ww.ofFixedSalartForCompanyContrribution2, "", htmlAttributes: new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group row">
                        <label for="colFormLabelLg" class="col-sm-4 col-form-label col-form-label-sm">%of Variable Salary For Company Contrribution</label>
                        <div class="col-sm-8">
                            @*<input type="text" class="form-control form-control-sm" id="colFormLabelLg" placeholder="col-form-label-lg">*@
                            @Html.EditorFor(ww => ww.ofVariableSalartForCompanyContrribution1, new { htmlAttributes = new { @class = "form-control form-control-sm", Placeholder = "Of Variable Salart For Company Contrribution" } })
                            @Html.ValidationMessageFor(ww => ww.ofVariableSalartForCompanyContrribution1, "", htmlAttributes: new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group row">
                        <label for="colFormLabelLg" class="col-sm-4 col-form-label col-form-label-sm">%of fixed Salary For Company Contrribution</label>
                        <div class="col-sm-8">
                            @*<input type="text" class="form-control form-control-sm" id="colFormLabelLg" placeholder="col-form-label-lg">*@
                            @Html.EditorFor(ww => ww.ofFixedSalartForCompanyContrribution1, new { htmlAttributes = new { @class = "form-control form-control-sm", Placeholder = "Of Fixed Salart For Company Contrribution" } })
                            @Html.ValidationMessageFor(ww => ww.ofFixedSalartForCompanyContrribution1, "", htmlAttributes: new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group row">
                        <label for="colFormLabelLg" class="col-sm-4 col-form-label col-form-label-sm">%of Variable Salary For Company Contrribution</label>
                        <div class="col-sm-8">
                            @*<input type="text" class="form-control form-control-sm" id="colFormLabelLg" placeholder="col-form-label-lg">*@
                            @Html.EditorFor(ww => ww.ofVariableSalartForCompanyContrribution2, new { htmlAttributes = new { @class = "form-control form-control-sm", Placeholder = "of Variable Salart For Company Contrribution" } })
                            @Html.ValidationMessageFor(ww => ww.ofVariableSalartForCompanyContrribution2, "", htmlAttributes: new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group row">
                        <label for="colFormLabelLg" class="col-sm-4 col-form-label col-form-label-sm">Company Fixed Salary</label>
                        <div class="col-sm-8">
                            @*<input type="text" class="form-control form-control-sm" id="colFormLabelLg" placeholder="col-form-label-lg">*@
                            @Html.EditorFor(ww => ww.CompanyFixedSalary, new { htmlAttributes = new { @class = "form-control form-control-sm", Placeholder = "Company Fixed Salary" } })
                            @Html.ValidationMessageFor(ww => ww.CompanyFixedSalary, "", htmlAttributes: new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group row">
                        <label for="colFormLabelLg" class="col-sm-4 col-form-label col-form-label-sm">Company Variable Salary</label>
                        <div class="col-sm-8">
                            @*<input type="text" class="form-control form-control-sm" id="colFormLabelLg" placeholder="col-form-label-lg">*@
                            @Html.EditorFor(ww => ww.CompanyVariableSalary, new { htmlAttributes = new { @class = "form-control form-control-sm", Placeholder = "Company Variable Salary" } })
                            @Html.ValidationMessageFor(ww => ww.CompanyVariableSalary, "", htmlAttributes: new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>

            <!--start button-->
            <div class="row mt-5 mb-4">
                <div class=col-md-12>
                    @*<button class="btn btn-primary">Save</button>*@
                    <div class="row">
                        <div class="col-md-6">
                            @*<button type="submit" class="btn btn-primary ">Add</button>*@
                            <button class="btn btn-primary">Update</button>
                        </div>

                    </div>
                </div>
            </div>
            <!--end button-->

        </div>
    }
</div>
<script type="text/javascript" src="~/bower_components/jquery/js/jquery.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
<script>
    //Min.js
    $(document).ready(function () {
        /* $(window).load('/jquery/getdata', // url
             {
                 name: 'bill'
             }, // data
             function(data, status, jqXGR) { // callback function
                 alert('data loaded');
             });*/

        $('.alert').fadeOut(8000),
            $('.close').click(function () {
                $('.alert').hide()
            })
        $('.zz').on('click', function () {
            $(function () {
                $("#di").dialog({
                    width: 700,
                    height: 600,
                    position: { my: "left top", }


                    /*appendTo: '<div class="card-header"><h5>Edit With Button</h5><span>Click on buttons to perform actions</span><div class="card-header-right"><i class="icofont icofont-rounded-down"></i><i class="icofont icofont-refresh"></i><i class="icofont icofont-close-circled"></i></div></div><div class="card-block"><div class="table-responsive"><table class="table table-striped table-bordered" id="example-2"><thead><tr><th>emp ID</th><th>First name</th><th>Last name</th><th>Choose</th></tr></thead><tbody><tr><th scope="row" class=""><input id="idd"></th><td>Islam</td><td>Ahmed</td><td class="tabledit-view-mode hh"><!-- <select id="dropdownList"><option value="1">Option 1</option> <option value="2">Option 2</option><option value="3">Option 3</option><option value="4">Option 4</option><option value="5">Option 5</option></select>--><button class="btn btn-primary" id="choose"> choose</button></td></tr></tbody></table></div></div>'*/
                });


            });
        });
        $('.aa').on('click', function () {
            $(function () {
                $("#dialog").dialog({
                    width: 700,
                    height: 600


                    /*appendTo: '<div class="card-header"><h5>Edit With Button</h5><span>Click on buttons to perform actions</span><div class="card-header-right"><i class="icofont icofont-rounded-down"></i><i class="icofont icofont-refresh"></i><i class="icofont icofont-close-circled"></i></div></div><div class="card-block"><div class="table-responsive"><table class="table table-striped table-bordered" id="example-2"><thead><tr><th>emp ID</th><th>First name</th><th>Last name</th><th>Choose</th></tr></thead><tbody><tr><th scope="row" class=""><input id="idd"></th><td>Islam</td><td>Ahmed</td><td class="tabledit-view-mode hh"><!-- <select id="dropdownList"><option value="1">Option 1</option> <option value="2">Option 2</option><option value="3">Option 3</option><option value="4">Option 4</option><option value="5">Option 5</option></select>--><button class="btn btn-primary" id="choose"> choose</button></td></tr></tbody></table></div></div>'*/
                });


            });
        });
        $('#dropdownList').on('change', function () {
            //var optionValue = $(this).val();
            //var optionText = $('#dropdownList option[value="'+optionValue+'"]').text();
            var optionText = $("#dropdownList option:selected").val();
            alert("Selected Option Text: " + optionText);
            $('.gg').val(optionText)
        });

        $("#myTable").on('click', '.btnSelect', function () {
            // get the current row
            var currentRow = $(this).closest("tr");

            var col1 = currentRow.find("th:eq(0)").text(); // get current row 1st TD value

            var data = col1;


            // alert(data);

            // alert(data);
            $('.gg').val(data);
            $('#dialog').hide()

            if ($('#colFormLabel').val() != 'Select Value...') {
                $.ajax({
                    type: 'POST',
                    url: 'GetEmployeeData',
                    dataType: 'json',
                    data: { id: $('.gg').val() },
                    success: function (mems) {
                        $('#Employee_FirstName').val(mems.FName);
                        $('#Employee_LastName').val(mems.LName);
                        $('#Employee_Personal_Status').val(mems.Status);
                        $('#Employee_TypeEmployee_Value').val(mems.Type);
                        $('#Employee_Class_Name').val(mems.Class);
                        $('#Employee_Personal_PersonalArea').val(mems.PersonnelArea);
                        $('#Employee_Personal_PersonalSubArea').val(mems.PersonnelSubArea);
                        $('#Employee_Personal_Division').val(mems.Division);
                        $('#Employee_Personal_SubDivision').val(mems.SubDivision);
                        $('#Employee_FileNumber').val(mems.FileNo);
                    },
                    error: function (ex) {
                        alert('Failed to retrieve states.' + ex);
                    }
                });
            }

        });
        $("#xx").on('click', '.btnSelect', function () {
            // get the current row
            var currentRow = $(this).closest("tr");

            var col1 = currentRow.find("th:eq(0)").text(); // get current row 1st TD value

            var data = col1;
            //alert(data)

            // alert(data);

            // alert(data);
            $('.ll').val(data);
            $('#di').hide()
        });
        $("#myInput").on("keyup", function () {
            var value = $(this).val().toLowerCase();
            $("#myTable tr").filter(function () {
                $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1)
            });
        });
        $("#nn").on("keyup", function () {
            var value = $(this).val().toLowerCase();
            $("#xx tr").filter(function () {
                $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1)
            });
        });





    });

    //My functions

    $('#colFormLabel').change(function () {
        if ($('#colFormLabel').val() != 'Select Value...') {
            $.ajax({
                type: 'POST',
                url: 'GetEmployeeData',
                dataType: 'json',
                data: { id: $('#colFormLabel').val() },
                success: function (mems) {
                    $('#Employee_FirstName').val(mems.FName);
                    $('#Employee_LastName').val(mems.LName);
                    $('#Employee_Personal_Status').val(mems.Status);
                    $('#Employee_TypeEmployee_Value').val(mems.Type);
                    $('#Employee_Class_Name').val(mems.Class);
                    $('#Employee_Personal_PersonalArea').val(mems.PersonnelArea);
                    $('#Employee_Personal_PersonalSubArea').val(mems.PersonnelSubArea);
                    $('#Employee_Personal_Division').val(mems.Division);
                    $('#Employee_Personal_SubDivision').val(mems.SubDivision);
                    $('#Employee_FileNumber').val(mems.FileNo);
                },
                error: function (ex) {
                    alert('Failed to retrieve states.' + ex);
                }
            });
        }
        else {
            Clear()
        }
    })

    function Clear() {
        $('#Employee_FirstName').val('');
        $('#Employee_LastName').val('');
        $('#Employee_Personal_Status').val('');
        $('#Employee_TypeEmployee_Value').val('');
        $('#Employee_Class_Name').val('');
        $('#Employee_Personal_PersonalArea').val('');
        $('#Employee_Personal_PersonalSubArea').val('');
        $('#Employee_Personal_Division').val('');
        $('#Employee_Personal_SubDivision').val('');
        $('#Employee_FileNumber').val('');

    }

    function AddAttendance() {
        $.ajax({
            type: 'POST',
            url: 'AddAttendance',
            dataType: 'json',
            data: {
                EmployeeNo: $('#colFormLabel').val(),
                AttendanceTypeId: $('#AttendanceTypeId').val(),
                Remarks: $('#exampleFormControlTextarea2').val(),
                HoursNo: $('#HoursNo').val(),
                DateFrom: $('#DateFrom').val(),
                TimeFrom: $('#TimeFrom').val(),
                TimeTo: $('#TimeTo').val()
            },
            success: function (mems) {
                if (mems == true) {
                    $("body").append('<div class="alert alert-primary" role = "alert" >Data is Saved</div>');

                    $("body").append('<div data-growl="container" class="alert alert-success alert-dismissable growl-animated animated fadeInDown" role="alert" data-growl-position="top-right" style="position: fixed; margin: 0px; z-index: 999999; display: inline-block; top: 30px; right: 30px; "><button type="button" class="close ml-3" data-growl="dismiss" style="display:block; z-index: 999998; "><span aria-hidden="true">×</span><span class="sr-only">Close</span></button><span data-growl="icon"></span> <span data-growl="title" > Bootstrap Growl </span> <span data-growl="message">Turning standard Bootstrap alerts into awesome notifications</span> <a href="#" data-growl="url"></a> </div>')
                    Clear();
                    $('#colFormLabel').val('Select Value...');
                    $('#AttendanceTypeId').val('');
                    $('#exampleFormControlTextarea2').val('');
                    $('#HoursNo').val('');
                    $('#DateFrom').val('');
                    $('#TimeFrom').val('');
                    $('#TimeTo').val('');


                }
                else
                    $("body").append('<div class="alert alert-primary" role = "alert" >Data not Saved</div>');
            },
            error: function (ex) {
                $("body").append('<div class="alert alert-primary" role = "alert" >Error in data</div>');
            }
        });
    }
</script>
<script>
    $(document).ready(function () {
        /* $(window).load('/jquery/getdata', // url
             {
                 name: 'bill'
             }, // data
             function(data, status, jqXGR) { // callback function
                 alert('data loaded');
             });*/

        $('.alert').fadeOut(8000),
            $('.close').click(function () {
                $('.alert').hide()
            })
    });
</script>



<script>
    var t = document.title;
    document.title = t + " - " + "Edit SocialInsurance"
</script>