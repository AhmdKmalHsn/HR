@model Model.Incentive
@using (Html.BeginForm())
{
    <div class="card">
        <div class="container">
            <div class="card-header row" style="  padding-left: 0;padding-right: 0;">
                <div class="col-md-6" style="padding-left:0">
                    <h5 class="text-capitalize btn">Incentive</h5>
                    <!--<div class="card-header-right">
                        <i class="icofont icofont-rounded-down"></i>
                        <i class="icofont icofont-refresh"></i>
                        <i class="icofont icofont-close-circled"></i>
                    </div>-->
                </div>
                <div class="col-md-6" style="text-align:right; padding-right:0">
                    <a class="btn btn-primary" href="/Incentive/Index?Length=11" style="
    border-radius: 0px 0px 2px 30px;
">Back to index</a>

                </div>
            </div>
        </div>
        <div class="card-block">
            <!-- Row start -->
            <div class="row m-b-30">

                <div class="col-lg-12 col-xl-12 col-sm-12">
                    <!--<div class="sub-title">Default</div>-->
                    <!-- Nav tabs -->
                    <ul class="nav nav-tabs md-tabs" role="tablist">
                        <li class="nav-item">
                            <a class="nav-link active" data-toggle="tab" href="#Personal" role="tab">Incentive</a>
                            <div class="slide"></div>
                        </li>

                    </ul>
                    <!-- Tab panes -->
                    <!-- start tab one-->
                    <div class="tab-content card-block">
                        <div class="tab-pane active" id="Personal" role="tabpanel">
                            <div class="container">
                                <div class="row">
                                    <div class="col-md-12">
                                        <form>

                                            <div class="form-group row" hidden>
                                                @Html.LabelFor(ww => ww.Id, htmlAttributes: new { @class = "col-sm-4 col-form-label col-form-label-sm" })
                                                <div class="col-sm-8">
                                                    @*<input type="date" class="form-control form-control-sm" id="colFormLabelSm" placeholder="col-form-label-sm">*@
                                                    @Html.EditorFor(ww => ww.Id, new { htmlAttributes = new { @class = "form-control form-control-sm" } })
                                                </div>
                                            </div>

                                            <div class="form-group row">
                                                @Html.LabelFor(ww => ww.JobTitleId, htmlAttributes: new { @class = "col-sm-2 col-form-label col-form-label-sm" })
                                                <div class="col-sm-10">
                                                    @*<input type="email" class="form-control form-control-sm" id="colFormLabelSm" placeholder="col-form-label-sm">*@
                                                    @Html.DropDownListFor(ww => ww.JobTitleId, ViewBag.jobs as SelectList, htmlAttributes: new { @class = "form-control" })
                                                </div>
                                            </div>

                                            <div class="form-group row">
                                                @Html.LabelFor(ww => ww.DateFrom, htmlAttributes: new { @class = "col-sm-2 col-form-label col-form-label-sm" })
                                                <div class="col-sm-10">
                                                    @*<input type="email" class="form-control form-control-sm" id="colFormLabelSm" placeholder="col-form-label-sm">*@
                                                    @if (Model.Id == 0)
                                                    {
                                                        @Html.EditorFor(ww => ww.DateFrom, new { htmlAttributes = new { @class = "form-control form-control-sm", Placeholder = "Date From" } })
                                                    }
                                                    else
                                                    {
                                                        <input type="date" name="DateFrom" id="DateFrom" value="@ViewBag.Date1" class="form-control form-control-sm" />
                                                    }
                                                    @Html.ValidationMessageFor(ww => ww.DateFrom, "", htmlAttributes: new { @class = "text-danger" })

                                                </div>
                                            </div>

                                            <div class="form-group row">
                                                @Html.LabelFor(ww => ww.DateTo, htmlAttributes: new { @class = "col-sm-2 col-form-label col-form-label-sm" })
                                                <div class="col-sm-10">
                                                    @*<input type="email" class="form-control form-control-sm" id="colFormLabelSm" placeholder="col-form-label-sm">*@
                                                    @if (Model.Id == 0)
                                                    {
                                                        @Html.EditorFor(ww => ww.DateTo, new { htmlAttributes = new { @class = "form-control form-control-sm", Placeholder = "Date To" } })
                                                    }
                                                    else
                                                    {
                                                        <input type="date" name="DateTo" id="DateTo" value="@ViewBag.Date2" class="form-control form-control-sm" />
                                                    }
                                                    @Html.ValidationMessageFor(ww => ww.DateTo, "", htmlAttributes: new { @class = "text-danger" })
                                                </div>
                                            </div>

                                            <div class="form-group row">
                                                @Html.LabelFor(ww => ww.Describe, htmlAttributes: new { @class = "col-sm-2 col-form-label col-form-label-sm" })
                                                <div class="col-sm-10">
                                                    @*<input type="email" class="form-control form-control-sm" id="colFormLabelSm" placeholder="col-form-label-sm">*@
                                                    @Html.EditorFor(ww => ww.Describe, new { htmlAttributes = new { @class = "form-control form-control-sm", Placeholder = "Describe" } })
                                                    @Html.ValidationMessageFor(ww => ww.Describe, "", htmlAttributes: new { @class = "text-danger" })
                                                </div>
                                            </div>

                                            <div class="form-group row">
                                                @Html.LabelFor(ww => ww.TypeOfValue, htmlAttributes: new { @class = "col-sm-2 col-form-label col-form-label-sm" })
                                                <div class="col-sm-10">
                                                    @Html.EnumDropDownListFor(ww => ww.TypeOfValue, htmlAttributes: new { @class = "custom-select form-control-sm w-100" })
                                                </div>
                                            </div>

                                            <div class="form-group row">
                                                @Html.LabelFor(ww => ww.Value, htmlAttributes: new { @class = "col-sm-2 col-form-label col-form-label-sm" })
                                                <div class="col-sm-9">
                                                    @*<input type="email" class="form-control form-control-sm" id="colFormLabelSm" placeholder="col-form-label-sm">*@
                                                    @Html.EditorFor(ww => ww.Value, new { htmlAttributes = new { @class = "form-control form-control-sm", Placeholder = "Value", type = "number" } })
                                                    @Html.ValidationMessageFor(ww => ww.Value, "", htmlAttributes: new { @class = "text-danger" })
                                                </div>
                                                <div class="col-sm-1">
                                                    <label class="col-sm-12 col-form-label col-form-label-sm" id="lblPercent">%</label>
                                                    <label class="col-sm-12 col-form-label col-form-label-sm" id="lblDays">Day</label>
                                                </div>
                                            </div>

                                            <div class="form-group row">
                                                @Html.LabelFor(ww => ww.Taxable, htmlAttributes: new { @class = "col-sm-2 col-form-label col-form-label-sm" })
                                                <div class="col-sm-10">
                                                    @Html.EnumDropDownListFor(ww => ww.Taxable, htmlAttributes: new { @class = "custom-select form-control-sm w-100" })
                                                </div>
                                            </div>

                                            <div class="form-group row">
                                                @Html.LabelFor(ww => ww.PerformanceEvaluation, htmlAttributes: new { @class = "col-sm-2 col-form-label col-form-label-sm" })
                                                <div class="col-sm-10">
                                                    @Html.EnumDropDownListFor(ww => ww.PerformanceEvaluation, htmlAttributes: new { @class = "custom-select form-control-sm w-100" })
                                                </div>
                                            </div>

                                            <div class="form-group row">
                                                @Html.LabelFor(ww => ww.MaxValue, htmlAttributes: new { @class = "col-sm-2 col-form-label col-form-label-sm" })
                                                <div class="col-sm-10">
                                                    @*<input type="email" class="form-control form-control-sm" id="colFormLabelSm" placeholder="col-form-label-sm">*@
                                                    @Html.EditorFor(ww => ww.MaxValue, new { htmlAttributes = new { @class = "form-control form-control-sm", Placeholder = "Maximum Value" } })
                                                    @Html.ValidationMessageFor(ww => ww.MaxValue, "", htmlAttributes: new { @class = "text-danger" })
                                                </div>
                                            </div>

                                            <div class="form-group row">
                                                @Html.LabelFor(ww => ww.MinValue, htmlAttributes: new { @class = "col-sm-2 col-form-label col-form-label-sm" })
                                                <div class="col-sm-10">
                                                    @*<input type="email" class="form-control form-control-sm" id="colFormLabelSm" placeholder="col-form-label-sm">*@
                                                    @Html.EditorFor(ww => ww.MinValue, new { htmlAttributes = new { @class = "form-control form-control-sm", Placeholder = "Mininmum Value" } })
                                                    @Html.ValidationMessageFor(ww => ww.MinValue, "", htmlAttributes: new { @class = "text-danger" })
                                                </div>
                                            </div>

                                            <div class="form-group row">
                                                <label class="col-sm-2 col-form-label col-form-label-sm">Created By</label>
                                                <div class="col-sm-10">
                                                    <input type="text" name="CreatedBy" value="@Services.UserService.GetById(int.Parse(Model.CreatedBy.ToString())).FullName" class="form-control form-control-sm" id="colFormLabelSm" placeholder="col-form-label-sm" disabled>
                                                </div>
                                            </div>

                                            @if (Model.Id != 0)
                                            {
                                                <div class="form-group row">
                                                    <label class="col-sm-2 col-form-label col-form-label-sm">Updated By</label>
                                                    <div class="col-sm-10">
                                                        <input type="text" name="UpdatedBy" value="@Services.UserService.GetById(int.Parse(Model.UpdatedBy.ToString())).FullName" class="form-control form-control-sm" id="colFormLabelSm" placeholder="col-form-label-sm" disabled>
                                                    </div>
                                                </div>
                                            }
                                        </form>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <!-- end tab one-->
                    </div>
                </div>

            </div>
            <!-- Row end -->
            <!-- Row start -->
            <div class="container">
                <div class="row">
                    <div class="col-md-6" style="text-align:left">
                        <input type="submit" class="btn btn-primary" value="Save" />
                    </div>

                </div>
            </div>

            <!-- Row end -->
        </div>
    </div>
}

<script type="text/javascript" src="~/bower_components/jquery/js/jquery.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
<script>
    $('#lblDays').hide();
    $('#lblPercent').hide();
    $('#TypeOfValue').change(function () {
        let value = $('#TypeOfValue').val();
        if (value == 1) {
            $('#lblPercent').show();
            $('#lblDays').hide();
        }
        else if (value == 2) {
            $('#lblDays').show();
            $('#lblPercent').hide();
        }
        else {
            $('#lblDays').hide();
            $('#lblPercent').hide();
        }
    })
</script>
